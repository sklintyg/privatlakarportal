// Load environment specific settings, if the -Penv=xxx parameter is given on invocation
task loadConfiguration {
    if (!project.hasProperty('env')) {
        project.ext.env = 'local'
    } else {
        logger.quiet "Loading configuration for environment '$env'."
        addProjectPropertiesFromFile(file("$rootDir/env-properties/${env}/settings.properties"))
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}

allprojects {
    group = 'se.inera.privatlakarportal'

    if (System.env.BUILD_VERSION && System.env.BUILD_NUMBER) {
        version = "$System.env.BUILD_VERSION-b$System.env.BUILD_NUMBER"
    } else {
        version = '1.0.0-SNAPSHOT'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repository-callistasoftware.forge.cloudbees.com/release/" }
        maven { url "https://repository-callistasoftware.forge.cloudbees.com/snapshot/" }
        maven { url "https://repository-callistasoftware.forge.cloudbees.com/3rdparty/" }
        maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }

    }
    buildscript {
        repositories {
            maven { url "https://repository-callistasoftware.forge.cloudbees.com/snapshot/" }
            jcenter()
        }
    }
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = "1.7"
    targetCompatibility = "1.7"

    ext {
        cxfVersion = '3.0.4'
        springContextVersion = "4.1.4.RELEASE"
        springSecurityVersion = "3.2.5.RELEASE"
        springSecurityExtensionsVersion = "1.0.1.RELEASE"
        liquibaseVersion = "3.3.1"
    }
}

private void addProjectPropertiesFromFile(propfile) {
    if (propfile.exists()) {
        def props = new Properties();
        propfile.withInputStream { props.load(it) }
        allprojects { subproject ->
            props.each { key, value ->
                subproject.ext.setProperty(key, value.toString())
            }
        }
    } else {
        throw new GradleScriptException("File '${propfile.path}' does not exist.", null)
    }
}

configure (subprojects.findAll { [
        'privatlakarportal-liquibase-runner',
        'privatlakarportal-web'
    ].contains(it.name) }) {

    apply plugin: 'maven'

    configurations { deployerJars }

    dependencies { deployerJars "org.apache.maven.wagon:wagon-webdav:1.0-beta-2" }

    ext.nexusUsername = System.properties['nexusUsername']
    ext.nexusPassword = System.properties['nexusPassword']

    uploadArchives {
        repositories {
            mavenDeployer {
                configuration = configurations.deployerJars
                repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
                snapshotRepository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots") {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }
                uniqueVersion = false
            }
        }
    }
}