ext {
    infraVersion = System.properties['infraVersion'] ?: '0-SNAPSHOT'

    ppSchemasVersion = "1.0.4"
    ppTermsSchemasVersion = "1.0.4"    
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.4"
    rivtaResidentMasterSchemasVersion = "1.1.3.5"
    
    activeMQSpringVersion = "5.9.1"
    aspectJVersion = "1.6.11"
    commonsCodecVersion = "1.10"
    commonsIOVersion = "2.4"
    commonsLangVersion = "3.1"
    cxfVersion = "3.1.3"
    geronimoJmsVersion = "1.1.1"
    groovyVersion = "2.3.6"
    guavaVersion = "18.0"
    hibernateEntityManagerVersion = "4.3.11.Final"
    hibernateJpaVersion = "1.0.0.Final"
    hikariCPVersion = "2.3.5"
    jacksonVersion = "2.8.1"
    javaxMailVersion = "1.5.2"
    jaxb2Version = "0.9.5"
    jsonSimpleVersion = "1.1.1"
    jstlVersion = "1.2"
    liquibaseVersion = "3.3.1"
    logbackVersion = "1.0.13"
    mysqlVersion = "5.1.40"
    restAssuredVersion = "2.9.0"
    servletApiVersion = "3.1.0"
    slf4jVersion = "1.7.10"
    springContextVersion = "4.2.2.RELEASE"
    springDataJpaVersion = "1.9.0.RELEASE"
    springSecurityExtensionsVersion = "1.0.1.RELEASE"
    springSecurityVersion = "4.0.3.RELEASE"
    springWsCoreVersion = "2.2.2.RELEASE"
    stringTemplateVersion = "4.0.8"
    swaggerVersion = "2.4.0"
    swaggerJaxRsVersion = "1.5.4"
    unitilsVersion = "3.3"
    usertypeVersion = "5.0.0.GA"
    wsdl4jVersion = "1.6.3"

    h2Version = "1.3.171"
    junitVersion = "4.12"
    hamcrestVersion = "1.3"
    mockitoAllVersion = "1.10.19"
}

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'se.inera.intyg:gradle-intyg-plugin:1.0.+'
        classpath 'se.inera.intyg:gradle-fitnesse-plugin:1.0.+'
        classpath 'com.moowork.gradle:gradle-node-plugin:1.1.1'
        classpath 'org.akhikhl.gretty:gretty:1.4.1'
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/repository/releases/" }
        maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    // Findbugs does not work very well with groovy code. Hence we exclude groovy projects.
    ext.findbugsExclude = ".*specifications\$"

    // Errorprone has no mechanism (yet) for excluding generated code. We therefore disable it for hsa-integration.
    ext.errorproneExclude = "privatlakarportal-hsa-integration"

    apply plugin: 'inera-intyg'
    apply plugin: 'maven'

    dependencies {
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "org.slf4j:slf4j-api:${slf4jVersion}"
        
        testCompile "junit:junit:4.+"
        testCompile "org.mockito:mockito-core:${mockitoAllVersion}"
        testCompile "org.springframework:spring-test:${springContextVersion}"
    }

    group = 'se.inera.privatlakarportal'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
            authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
        }
    }
}

task tagRelease(type: TagReleaseTask)

// Load environment specific settings, if the -Penv=xxx parameter is given on invocation.
task loadConfiguration {
    def environment = null
    if (project.hasProperty('env')) {
        environment = project.getProperty('env')
    } else {
        environment = "local"
    }
    logger.quiet "Loading configuration for environment '$environment'."
    addProjectPropertiesFromFile(project, file("$rootDir/env-properties/${environment}/settings.properties"))
}
