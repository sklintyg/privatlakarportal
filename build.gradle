plugins {
    id "se.inera.intyg.plugin.common" version "3.2.7" apply false
    id "org.gretty" version "3.0.8" apply false
    id "nebula.node" version "1.4.2" apply false
    id "io.spring.dependency-management" version "1.0.13.RELEASE" apply false
}

ext {
    infraVersion = System.properties['infraVersion'] ?: '3.19.1-SNAPSHOT'
    refDataVersion = System.properties['refDataVersion'] ?: '1.0-SNAPSHOT'

    ppSchemasVersion = "1.0.5"
    ppTermsSchemasVersion = "1.0.5"

    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.5"

    schemasContractVersion = "2.1.8"

    commonsIOVersion = "2.11.0"
    cxfVersion = "3.5.5"
    geronimoJmsVersion = "1.1.1"
    guavaVersion = "31.1-jre"
    jadiraUserTypeVersion = "6.0.1.GA"
    jaxb2Version = "0.13.1"
    jsonSimpleVersion = "1.1.1"
    picocliVersion = "4.6.3"
    springSecurityExtensionsVersion = "1.0.3.RELEASE"
    stAntlr4Version = "4.3.4"
    springDocVersion = "1.6.11"
    shedlockSpringVersion = "4.42.0"

    nodeJsVersion = "12.22.12"
    npmVersion = "6.14.16"

    springbootMavenBomVersion = "2.7.6"
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            url "https://nexus.drift.inera.se/repository/it-public/"
        }
        mavenCentral {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    // Errorprone has no mechanism (yet) for excluding generated code. We therefore disable it for hsa-integration.
    ext.errorproneExclude = "privatlakarportal-hsa-integration"

    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: 'maven'
    apply plugin: "io.spring.dependency-management"

    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports { mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}" }
    }

    dependencies {
        compile "javax.annotation:javax.annotation-api"
        compile "jakarta.xml.bind:jakarta.xml.bind-api"
        compile "jakarta.xml.ws:jakarta.xml.ws-api"
        compile "ch.qos.logback:logback-classic"
        compile "org.slf4j:slf4j-api"
        compile "com.sun.xml.messaging.saaj:saaj-impl"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testCompile "se.inera.intyg.refdata:refdata:${refDataVersion}"
        testCompile "junit:junit"
        testCompile "org.junit.jupiter:junit-jupiter-api"
        testCompile "org.junit.jupiter:junit-jupiter-params"
        testCompile "org.mockito:mockito-junit-jupiter"
        testCompile "org.mockito:mockito-core"
        testCompile "org.springframework:spring-test"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    group = 'se.inera.privatlakarportal'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    sourceCompatibility = 11
    targetCompatibility = 11

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.enabled = false

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://nexus.drift.inera.se/repository/maven-releases/") {
            authentication(userName: System.properties['ineraNexusUsername'], password: System.properties['ineraNexusPassword'])
        }
    }
}

gradle.taskGraph.whenReady {
    def runningRestAssuredTest = false
    project('privatlakarportal-web') { runningRestAssuredTest = gradle.taskGraph.getAllTasks().contains(restAssuredTest) }

    if (runningRestAssuredTest) {
        project('privatlakarportal-web') { test.enabled(false) }
        project('privatlakarportal-persistence') { test.enabled(false) }
        project('privatlakarportal-wc-integration') { test.enabled(false) }
        project('privatlakarportal-hsa-integration') { test.enabled(false) }
        project('privatlakarportal-common') { test.enabled(false) }
    }
}

task tagRelease(type: TagReleaseTask)

def environment = project.findProperty('env') ?: "local"
se.inera.intyg.IntygPluginKt.addProjectPropertiesFromFile(project, file("$rootDir/env-properties/${environment}/settings.properties"))
