description = 'Liquibase runner for privatlakarportalen'

apply plugin: 'application'

mainClassName = "liquibase.integration.commandline.Main"
applicationDefaultJvmArgs = ["-Dfile.encoding=utf8"]

startScripts << {
    // Get hold of the file name of the statistik-service jar file
    def privPersistenceDependency = configurations.runtime.filter { it.name.startsWith("privatlakarportal-persistence") }.singleFile.name
    // Insert our default script parameters into the script templates

    def originalUnixScript = unixScript.text
    unixScript.text = unixScript.text.replaceAll(/"\$@"$/,
            "--driver=com.mysql.jdbc.Driver --classpath=lib/${privPersistenceDependency} --changeLogFile=changelog/changelog.xml \"\\\$@\"")
    if (originalUnixScript.equals(unixScript.text)) {
            throw new RuntimeException("No replacement seems to have been made to the liquibase unix script.")
    }

    def originalWindowsScript = windowsScript.text
    windowsScript.text = windowsScript.text.replaceAll(/%CMD_LINE_ARGS%/,
            "--driver=com.mysql.jdbc.Driver --classpath=lib/${privPersistenceDependency} --changeLogFile=changelog/changelog.xml %CMD_LINE_ARGS%")
    if (originalWindowsScript.equals(windowsScript.text)) {
            throw new RuntimeException("No replacement seems to have been made to the liquibase windows script.")
    }
}

sonarqube {
    skipProject = true
}

artifacts {
    archives distZip
}

configurations.runtime {
    transitive = false
}

dependencies {
    runtime project(":privatlakarportal-persistence")
    runtime "org.liquibase:liquibase-core:${liquibaseVersion}"
    runtime "mysql:mysql-connector-java:5.1.32"
}
